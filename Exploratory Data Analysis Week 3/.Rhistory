View(hh)
hh
plot(hh)
dist(dataMatrix)
hh <- hclust(dist(dataMatrix))
plot(hh)
dataMatrixOrdered <- dataMatrix[hh$order, ]
par(mar = rep(5, 4))
par(mfrow = c(1, 3))
image(t(dataMatrixOrdered)[, nrow(dataMatrixOrdered):1])
plot(rowMeans(dataMatrixOrdered), 40:1, xlab = "Row Mean", ylab = "Row", pch = 19)
plot(colMeans(dataMatrixOrdered), xlab = "Column", ylab = "Column Mean", pch = 19)
heatmap(dataMatrix) # run hierarchical analysis on this dataset; no particular pattern because its random generated
hh <- hclust(dist(dataMatrix)) # Perform hierarchical clustering
plot(hh)
dataMatrixOrdered <- dataMatrix[hh$order, ]
image(t(dataMatrixOrdered)[, nrow(dataMatrixOrdered):1])
heatmap(dataMatrix) # columns of the dendogram shows data splits into 2 clusters, on the row there's no apparent cluster
hh <- hclust(dist(dataMatrix)) # Perform hierarchical clustering
plot(hh)
image(hh)
str(hh)
class(hh)
hh$order
dataMatrixOrdered$order
dataMatrixOrdered
hh$order
hh <- hclust(dist(dataMatrix)) # perform hierarchical clustering
dataMatrixOrdered <- dataMatrix[hh$order, ] # reorder according to the hierarchical analysis of the rows
par(mar = rep(5, 4))
par(mfrow = c(1, 3))
image(t(dataMatrixOrdered)[, nrow(dataMatrixOrdered):1])
plot(rowMeans(dataMatrixOrdered), 40:1, xlab = "Row Mean", ylab = "Row", pch = 19)
plot(colMeans(dataMatrixOrdered), xlab = "Column", ylab = "Column Mean", pch = 19)
image(dataMatrixOrdered)
dataMatrixOrdered
hh <- hclust(dist(dataMatrix)) # perform hierarchical clustering
dataMatrixOrdered <- dataMatrix[hh$order, ] # reorder according to the hierarchical analysis of the rows
par(mar = rep(5, 4))
par(mfrow = c(1, 3))
image(t(dataMatrixOrdered)[, nrow(dataMatrixOrdered):1])
plot(rowMeans(dataMatrixOrdered), 40:1, xlab = "Row Mean", ylab = "Row", pch = 19)
plot(colMeans(dataMatrixOrdered), xlab = "Column", ylab = "Column Mean", pch = 19)
set.seed(1234)
par(mar = oldpar)
dataMatrix <- as.matrix(dataFrame)[sample(1:12),]
dataMatrix
image(dataMatrix)
box()
title(main = "dataMatrix", font.main = 4)
oldpar <- par("mar")
par(mar = rep(0.2, 4))
plot(x, y, col = kmeansObj$cluster, pch = 19, cex = 2)
points(kmeansObj$centers, col = 1:3, pch = 3, cex = 3, lwd = 3)
set.seed(1234)
x <- rnorm(12, mean = rep(1:3, each = 4), sd = 0.2)
y <- rnorm(12, mean = rep(c(1, 2, 1), each = 4), sd = 0.2)
plot(x, y, col = "blue", pch = 19, cex = 2)
text(x + 0.05, y + 0.05, labels = as.character(1:12))
dataFrame <- data.frame(x,y)
kmeansObj <- kmeans(dataFrame, centers = 3) # perform k-means clustering analysis and set 3 centroids
names(kmeansObj)
kmeansObj$cluster
oldpar <- par("mar")
par(mar = rep(0.2, 4))
plot(x, y, col = kmeansObj$cluster, pch = 19, cex = 2)
points(kmeansObj$centers, col = 1:3, pch = 3, cex = 3, lwd = 3)
set.seed(1234)
par(mar = oldpar)
dataMatrix <- as.matrix(dataFrame)[sample(1:12),]
dataMatrix
image(dataMatrix)
box()
title(main = "dataMatrix", font.main = 4)
image(t(dataMatrix))
box()
title(main = "t(dataMatrix)", font.main = 4) # Transpose
image(t(dataMatrix)[,nrow(dataMatrix):1])
box()
title(main = "t(datamatrix)[,12:1]", font.main = 4) # Inverse the columns (this heat map is alligned with the dataframe)
image(t(dataMatrix)[,order(kmeansObj$cluster)])
box()
title(main = "t(dataMatrix)[,order(kmeansObj$cluster)]", font.main = 4) # re-order the columns based on clusters
kmeansObj <- kmeans(dataMatrix, centers=3)
par(mfrow=c(1,2), mar = c(2, 4, 0.1, 0.1))
image(t(dataMatrix)[,nrow(dataMatrix):1]) # t = transpose
image(t(dataMatrix)[,order(kmeansObj$cluster)])
source('~/Desktop/coursera-dss/Exploratory Data Analysis Week 3/Dimensional Reduction (part 1).R')
set.seed(1234)
x <- rnorm(12, mean = rep(1:3, each = 4), sd = 0.2)
y <- rnorm(12, mean = rep(c(1, 2, 1), each = 4), sd = 0.2)
plot(x, y, col = "blue", pch = 19, cex = 2)
text(x + 0.05, y + 0.05, labels = as.character(1:12))
dataFrame <- data.frame(x,y)
kmeansObj <- kmeans(dataFrame, centers = 3) # perform k-means clustering analysis and set 3 centroids
names(kmeansObj)
kmeansObj$cluster
oldpar <- par("mar")
par(mar = rep(0.2, 4))
plot(x, y, col = kmeansObj$cluster, pch = 19, cex = 2)
points(kmeansObj$centers, col = 1:3, pch = 3, cex = 3, lwd = 3)
set.seed(1234)
par(mar = oldpar)
dataMatrix <- as.matrix(dataFrame)[sample(1:12),]
dataMatrix
image(dataMatrix)
box()
title(main = "dataMatrix", font.main = 4)
image(t(dataMatrix))
box()
title(main = "t(dataMatrix)", font.main = 4) # Transpose
image(t(dataMatrix)[,nrow(dataMatrix):1])
box()
title(main = "t(datamatrix)[,12:1]", font.main = 4) # Inverse the columns (this heat map is alligned with the dataframe)
image(t(dataMatrix)[,order(kmeansObj$cluster)])
box()
title(main = "t(dataMatrix)[,order(kmeansObj$cluster)]", font.main = 4) # re-order the columns based on clusters
kmeansObj <- kmeans(dataMatrix, centers=3)
set.seed(1234)
x <- rnorm(12, mean = rep(1:3, each = 4), sd = 0.2)
y <- rnorm(12, mean = rep(c(1, 2, 1), each = 4), sd = 0.2)
plot(x, y, col = "blue", pch = 19, cex = 2)
text(x + 0.05, y + 0.05, labels = as.character(1:12))
dataFrame <- data.frame(x,y)
kmeansObj <- kmeans(dataFrame, centers = 3) # perform k-means clustering analysis and set 3 centroids
names(kmeansObj)
kmeansObj$cluster
oldpar <- par("mar")
par(mar = rep(0.2, 4))
plot(x, y, col = kmeansObj$cluster, pch = 19, cex = 2)
points(kmeansObj$centers, col = 1:3, pch = 3, cex = 3, lwd = 3)
set.seed(1234)
par(mfrow = c(1, 4))
par(mar = oldpar)
dataMatrix <- as.matrix(dataFrame)[sample(1:12),]
dataMatrix
image(dataMatrix)
box()
title(main = "dataMatrix", font.main = 4)
image(t(dataMatrix))
box()
title(main = "t(dataMatrix)", font.main = 4) # Transpose
image(t(dataMatrix)[,nrow(dataMatrix):1])
box()
title(main = "t(datamatrix)[,12:1]", font.main = 4) # Inverse the columns (this heat map is alligned with the dataframe)
image(t(dataMatrix)[,order(kmeansObj$cluster)])
box()
title(main = "t(dataMatrix)[,order(kmeansObj$cluster)]", font.main = 4) # re-order the columns based on clusters
par("mar")
set.seed(1234)
par(mfrow = c(1, 4))
par(mar = 4.5, 4.1, 4.1, 3)
dataMatrix <- as.matrix(dataFrame)[sample(1:12),]
dataMatrix
image(dataMatrix)
box()
title(main = "dataMatrix", font.main = 4)
image(t(dataMatrix))
box()
title(main = "t(dataMatrix)", font.main = 4) # Transpose
image(t(dataMatrix)[,nrow(dataMatrix):1])
box()
title(main = "t(datamatrix)[,12:1]", font.main = 4) # Inverse the columns (this heat map is alligned with the dataframe)
image(t(dataMatrix)[,order(kmeansObj$cluster)])
box()
title(main = "t(dataMatrix)[,order(kmeansObj$cluster)]", font.main = 4) # re-order the columns based on clusters
kmeansObj <- kmeans(dataMatrix, centers=3)
set.seed(1234)
par(mfrow = c(1, 4))
par(mar = 4.5, 4.1, 4.1, 4)
dataMatrix <- as.matrix(dataFrame)[sample(1:12),]
dataMatrix
image(dataMatrix)
box()
title(main = "dataMatrix", font.main = 4)
image(t(dataMatrix))
box()
title(main = "t(dataMatrix)", font.main = 4) # Transpose
image(t(dataMatrix)[,nrow(dataMatrix):1])
box()
title(main = "t(datamatrix)[,12:1]", font.main = 4) # Inverse the columns (this heat map is alligned with the dataframe)
image(t(dataMatrix)[,order(kmeansObj$cluster)])
box()
title(main = "t(dataMatrix)[,order(kmeansObj$cluster)]", font.main = 4) # re-order the columns based on clusters
set.seed(1234)
par(mfrow = c(1, 4))
par(mar = 4.5, 4.1, 4.1, 4)
par(mfrow = c(1, 4))
par(mar = 4.5, 4.1, 4.1, 3)
par(mar = 4.5, 4.1, 4.1, 2)
par(mar = 4.5, 4.1, 4.1, 1)
par(mar = 4.5, 4.1, 4.1, 2.1)
set.seed(1234)
x <- rnorm(12, mean = rep(1:3, each = 4), sd = 0.2)
y <- rnorm(12, mean = rep(c(1, 2, 1), each = 4), sd = 0.2)
plot(x, y, col = "blue", pch = 19, cex = 2)
text(x + 0.05, y + 0.05, labels = as.character(1:12))
dataFrame <- data.frame(x = x, y = y)
dist(dataFrame)
dataFrame <- data.frame(x = x, y = y)
distxy <- dist(dataFrame)
hClustering <- hclust(distxy)
plot(hClustering) # choose level of cluster based on the height of the dendogram
myplclust <- function( hclust, lab=hclust$labels, lab.col=rep(1,length(hclust$labels)), hang=0.1,...){
y <- rep(hclust$height,2)
x <- as.numeric(hclust$merge)
y <- y[which(x<0)]
x <- x[which(x<0)]
x <- abs(x)
y <- y[order(x)]
x <- x[order(x)]
plot( hclust, labels=FALSE, hang=hang, ... )
text( x=x, y=y[hclust$order]-(max(hclust$height)*hang), labels=lab[hclust$order], col=lab.col[hclust$order], srt=90, adj=c(1,0.5), xpd=NA, ... )}
set.seed(1234)
x <- rnorm(12, mean = rep(1:3, each = 4), sd = 0.2)
y <- rnorm(12, mean = rep(c(1, 2, 1), each = 4), sd = 0.2)
plot(x, y, col = "blue", pch = 19, cex = 2)
text(x + 0.05, y + 0.05, labels = as.character(1:12))
dataFrame <- data.frame(x = x, y = y)
distxy <- dist(dataFrame)
hClustering <- hclust(distxy) # Perform hierarchical clustering
myplclust(hClustering, lab = rep(1:3, each = 4), lab.col = rep(1:3, each = 4))
dataFrame <- data.frame(x = x, y = y)
set.seed(143)
dataMatrix <- as.matrix(dataFrame)[sample(1:12), ]
dataFrame
dataMatrix
heatmap(dataMatrix) # heatmap runs hierarchical clustering on rows and columns of the table, reorders columns and the rows according to hierarchical clustering algorithm
library(gplots)
heatmap.2(dataMatrix)
heatmap.2(dataMatrix, trace = "none")
heatmap(dataMatrix)
dataFrame
dataMatrix
dataMatrix[y,x]
dataMatrix
heatmap.2(dataMatrix)
heatmap.2(dataMatrix, trace = "none")
dev.off()
set.seed(1234)
x <- rnorm(12, mean = rep(1:3, each = 4), sd = 0.2)
y <- rnorm(12, mean = rep(c(1, 2, 1), each = 4), sd = 0.2)
plot(x, y, col = "blue", pch = 19, cex = 2)
text(x + 0.05, y + 0.05, labels = as.character(1:12))
dataFrame <- data.frame(x = x, y = y)
distxy <- dist(dataFrame)
hClustering <- hclust(distxy) # Perform hierarchical clustering
myplclust(hClustering, lab = rep(1:3, each = 4), lab.col = rep(1:3, each = 4))
dataFrame <- data.frame(x = x, y = y)
set.seed(143)
dataMatrix <- as.matrix(dataFrame)[sample(1:12), ]
dataFrame
dataMatrix
heatmap(dataMatrix) # heatmap runs hierarchical clustering on rows and columns of the table, reorders columns and the rows according to hierarchical clustering algorithm
library(gplots)
heatmap.2(dataMatrix)
heatmap.2(dataMatrix, trace = "none")
heatmap(dataMatrix)
heatmap.2(dataMatrix, trace = "none")
dev.off()
library(gplots)
heatmap.2(dataMatrix)
heatmap.2(dataMatrix, trace = "none")
heatmap(dataMatrix)
heatmap.2(dataMatrix)
heatmap.2(dataMatrix)
dataFrame <- data.frame(x = x, y = y)
set.seed(143)
dataMatrix <- as.matrix(dataFrame)[sample(1:12), ]
dataFrame
dataMatrix
heatmap(dataMatrix) # heatmap runs hierarchical clustering on rows and columns of the table, reorders columns and the rows according to hierarchical clustering algorithm
dataFrame <- data.frame(x = x, y = y)
set.seed(143)
dataMatrix <- as.matrix(dataFrame)[sample(1:12), ]
dataFrame
dataMatrix
heatmap(dataMatrix) # heatmap runs hierarchical clustering on rows and columns of the table, reorders columns and the rows according to hierarchical clustering algorithm
set.seed(1234)
x <- rnorm(12, mean = rep(1:3, each = 4), sd = 0.2)
y <- rnorm(12, mean = rep(c(1, 2, 1), each = 4), sd = 0.2)
plot(x, y, col = "blue", pch = 19, cex = 2)
text(x + 0.05, y + 0.05, labels = as.character(1:12))
dataFrame <- data.frame(x = x, y = y)
distxy <- dist(dataFrame)
hClustering <- hclust(distxy) # Perform hierarchical clustering
myplclust(hClustering, lab = rep(1:3, each = 4), lab.col = rep(1:3, each = 4))
dataFrame <- data.frame(x = x, y = y)
set.seed(143)
dataMatrix <- as.matrix(dataFrame)[sample(1:12), ]
dataMatrix <- as.matrix(dataFrame)[sample(1:12), ]
dataFrame
dataMatrix
dataMatrix <- as.matrix(dataFrame)[sample(1:12), ]
dataFrame
dataMatrix # coerce the dataMatrix into dataFrame and rearrange the rows
dataFrame <- data.frame(x = x, y = y)
set.seed(143)
dataMatrix <- as.matrix(dataFrame)[sample(1:12), ]
dataFrame
dataMatrix # coerce the dataMatrix into dataFrame and rearrange the rows
heatmap(dataMatrix) # heatmap runs hierarchical clustering on rows and columns of the table, reorders columns and the rows according to hierarchical clustering algorithm
source('~/Desktop/coursera-dss/Exploratory Data Analysis Week 3/Hierarchical Clustering (part 2).R')
set.seed(123)
x <- rnorm(9, mean = rep(1:3, each = 3), sd = 0.2)
y <- rnorm(9, mean = rep(c(1, 2, 1), each = 3), sd = 0.2)
plot(x, y, col = "blue", pch = 19, cex = 2)
text(x + 0.05, y + 0.05, labels = as.character(1:9))
dataFrame <- data.frame(x = x, y = y)
distxy <- dist(dataFrame)
hClustering <- hclust(distxy)
myplclust(hClustering, lab = rep(1:3, each = 3), lab.col = rep(1:3, each = 3))
myplclust <- function( hclust, lab=hclust$labels, lab.col=rep(1,length(hclust$labels)), hang=0.1,...){
y <- rep(hclust$height,2)
x <- as.numeric(hclust$merge)
y <- y[which(x<0)]
x <- x[which(x<0)]
x <- abs(x)
y <- y[order(x)]
x <- x[order(x)]
plot( hclust, labels=FALSE, hang=hang, ... )
text( x=x, y=y[hclust$order]-(max(hclust$height)*hang), labels=lab[hclust$order], col=lab.col[hclust$order], srt=90, adj=c(1,0.5), xpd=NA, ... )}
View(myplclust)
View(myplclust)
dataFrame <- data.frame(x = x, y = y)
distxy <- dist(dataFrame)
hClustering <- hclust(distxy)
myplclust(hClustering, lab = rep(1:3, each = 3), lab.col = rep(1:3, each = 3))
dataMatrix <- as.matrix(dataFrame)
colors <- heat.colors(15, alpha = 0.5)
heatmap.2(dataMatrix, trace = "none", cellnote = dataMatrix, notecex = 1.0, notecol = "black")
set.seed(1234)
x <- rnorm(12, mean = rep(1:3, each = 4), sd = 0.2)
y <- rnorm(12, mean = rep(c(1, 2, 1), each = 4), sd = 0.2)
plot(x, y, col = "blue", pch = 19, cex = 2)
text(x + 0.05, y + 0.05, labels = as.character(1:12))
set.seed(1234)
x <- rnorm(12, mean = rep(1:3, each = 4), sd = 0.2)
y <- rnorm(12, mean = rep(c(1, 2, 1), each = 4), sd = 0.2)
plot(x, y, col = "blue", pch = 19, cex = 2)
text(x + 0.05, y + 0.05, labels = as.character(1:12))
set.seed(1234)
x <- rnorm(12, mean = rep(1:3, each = 4), sd = 0.2)
y <- rnorm(12, mean = rep(c(1, 2, 1), each = 4), sd = 0.2)
plot(x, y, col = "blue", pch = 19, cex = 2)
text(x + 0.05, y + 0.05, labels = as.character(1:12))
set.seed(1234)
x <- rnorm(12, mean = rep(1:3, each = 4), sd = 0.2)
y <- rnorm(12, mean = rep(c(1, 2, 1), each = 4), sd = 0.2)
plot(x, y, col = "blue", pch = 19, cex = 2)
text(x + 0.05, y + 0.05, labels = as.character(1:12))
dataFrame <- data.frame(x,y)
kmeansObj <- kmeans(dataFrame, centers = 3) # perform k-means clustering analysis and set 3 centroids
names(kmeansObj)
kmeansObj$cluster
par(mar = rep(0.2, 4))
plot(x, y, col = kmeansObj$cluster, pch = 19, cex = 2)
points(kmeansObj$centers, col = 1:3, pch = 3, cex = 3, lwd = 3)
set.seed(1234)
x <- rnorm(12, mean = rep(1:3, each = 4), sd = 0.2)
y <- rnorm(12, mean = rep(c(1, 2, 1), each = 4), sd = 0.2)
plot(x, y, col = "blue", pch = 19, cex = 2)
text(x + 0.05, y + 0.05, labels = as.character(1:12))
dataFrame <- data.frame(x,y)
kmeansObj <- kmeans(dataFrame, centers = 3) # perform k-means clustering analysis and set 3 centroids
names(kmeansObj)
kmeansObj$cluster
par(mar = rep(0.2, 4)) # Setting up the margin for the graphic device
plot(x, y, col = kmeansObj$cluster, pch = 19, cex = 2)
points(kmeansObj$centers, col = 1:3, pch = 3, cex = 3, lwd = 3)
points(kmeansObj$centers, col = 1:3, pch = 3, cex = 3, lwd = 5)
points(kmeansObj$centers, col = 1:3, pch = 3, cex = 3, lwd = 3)
set.seed(1234)
par(mfrow = c(1, 4))
par(mar = 4.5, 4.1, 4.1, 2.1)
set.seed(1234)
par(mfrow = c(1, 4))
par(mar = 2, 2, 2, 2)
dataMatrix <- as.matrix(dataFrame)[sample(1:12),]
dataMatrix
image(dataMatrix)
box()
title(main = "dataMatrix", font.main = 4)
set.seed(1234)
par(mfrow = c(1, 4))
par(mar = 4, 4, 4, 4)
dataMatrix <- as.matrix(dataFrame)[sample(1:12),]
dataMatrix
image(dataMatrix)
box()
title(main = "dataMatrix", font.main = 4)
image(t(dataMatrix))
box()
title(main = "t(dataMatrix)", font.main = 4) # Transpose
image(t(dataMatrix)[,nrow(dataMatrix):1])
box()
title(main = "t(datamatrix)[,12:1]", font.main = 4) # Inverse the columns (this heat map is alligned with the dataframe)
image(t(dataMatrix)[,order(kmeansObj$cluster)])
box()
title(main = "t(dataMatrix)[,order(kmeansObj$cluster)]", font.main = 4) # re-order the columns based on clusters
kmeansObj <- kmeans(dataMatrix, centers=3)
par(mfrow=c(1,2), mar = c(2, 4, 0.1, 0.1))
image(t(dataMatrix)[,nrow(dataMatrix):1]) # t = transpose
image(t(dataMatrix)[,order(kmeansObj$cluster)])
set.seed(1234)
x <- rnorm(12, mean = rep(1:3, each = 4), sd = 0.2)
y <- rnorm(12, mean = rep(c(1, 2, 1), each = 4), sd = 0.2)
plot(x, y, col = "blue", pch = 19, cex = 2)
text(x + 0.05, y + 0.05, labels = as.character(1:12))
dataFrame <- data.frame(x,y)
kmeansObj <- kmeans(dataFrame, centers = 3) # perform k-means clustering analysis and set 3 centroids
names(kmeansObj)
kmeansObj$cluster
par(mar = rep(0.2, 4)) # Setting up the margin for the graphic device
plot(x, y, col = kmeansObj$cluster, pch = 19, cex = 2)
points(kmeansObj$centers, col = 1:3, pch = 3, cex = 3, lwd = 3)
set.seed(1234)
par(mfrow = c(1, 4))
par(mar = 4, 4, 4, 4)
dataMatrix <- as.matrix(dataFrame)[sample(1:12),]
dataMatrix
image(dataMatrix)
box()
title(main = "dataMatrix", font.main = 4)
par("mar")
par(mar = 4, 4, 4, 4)
set.seed(1234)
par(mfrow = c(1, 4))
par(mar = c(4, 4, 4, 4))
dataMatrix <- as.matrix(dataFrame)[sample(1:12),]
dataMatrix
image(dataMatrix)
box()
title(main = "dataMatrix", font.main = 4)
image(t(dataMatrix))
box()
title(main = "t(dataMatrix)", font.main = 4) # Transpose
image(t(dataMatrix)[,nrow(dataMatrix):1])
box()
title(main = "t(datamatrix)[,12:1]", font.main = 4) # Inverse the columns (this heat map is alligned with the dataframe)
image(t(dataMatrix)[,order(kmeansObj$cluster)])
box()
title(main = "t(dataMatrix)[,order(kmeansObj$cluster)]", font.main = 4) # re-order the columns based on clusters
set.seed(1234)
par(mfrow = c(1, 4))
par(mar = c(4, 4, 4, 4))
dataMatrix <- as.matrix(dataFrame)[sample(1:12),]
dataMatrix
image(dataMatrix)
box()
title(main = "dataMatrix", font.main = 4)
image(t(dataMatrix))
box()
title(main = "t(dataMatrix)", font.main = 4) # Transpose
image(t(dataMatrix)[,nrow(dataMatrix):1])
box()
title(main = "t(datamatrix)[,12:1]", font.main = 4) # Inverse the columns (this heat map is alligned with the dataframe)
image(t(dataMatrix)[,order(kmeansObj$cluster)])
box()
title(main = "t(dataMatrix)[,order(kmeansObj$cluster)]", font.main = 4) # re-order the columns based on clusters
dataMatrix
datamatrix
dataMatrix
image(t(dataMatrix)[,order(kmeansObj$cluster)])
box()
title(main = "t(dataMatrix)[,order(kmeansObj$cluster)]", font.main = 4) # re-order the columns based on clusters
set.seed(1234)
dataMatrix <- as.matrix(dataFrame)[sample(1:12),]
dataMatrix
kmeansObj <- kmeans(dataMatrix, centers = 3)
par(mfrow = c(1, 4), mar = c(4, 4, 4, 4))
image(dataMatrix)
box()
title(main = "dataMatrix", font.main = 4)
image(t(dataMatrix))
box()
title(main = "t(dataMatrix)", font.main = 4) # Transpose
image(t(dataMatrix)[,nrow(dataMatrix):1])
box()
title(main = "t(datamatrix)[,12:1]", font.main = 4) # Inverse the columns (this heat map is alligned with the dataframe)
dataMatrix
image(t(dataMatrix)[,order(kmeansObj$cluster)])
box()
title(main = "t(dataMatrix)[,order(kmeansObj$cluster)]", font.main = 4) # re-order the columns based on clusters
source('~/Desktop/coursera-dss/Exploratory Data Analysis Week 3/K-Means Clustering (part 2).R')
dataMatrix
t(datamatrix)[,12:1]
t(dataMatrix)[,12:1]
t(dataMatrix)
dataMatrix
source('~/Desktop/coursera-dss/Exploratory Data Analysis Week 3/K-Means Clustering (part 2).R')
set.seed(12345)
par(mar = rep(0.2, 4))
dataMatrix <- matrix(rnorm(400), nrow = 40)
image(1:10, 1:40, t(dataMatrix)[, nrow(dataMatrix):1])
par(mar = rep(0.2, 4))
set.seed(12345)
par(mar = rep(0.5, 4))
dataMatrix <- matrix(rnorm(400), nrow = 40)
image(1:10, 1:40, t(dataMatrix)[, nrow(dataMatrix):1])
set.seed(12345)
par(mar = rep(2, 4))
dataMatrix <- matrix(rnorm(400), nrow = 40)
image(1:10, 1:40, t(dataMatrix)[, nrow(dataMatrix):1])
set.seed(12345)
par(mar = rep(2, 4))
dataMatrix <- matrix(rnorm(400), nrow = 40)
image(1:10, 1:40, t(dataMatrix)[, nrow(dataMatrix):1])
image(t(dataMatrix)[, nrow(dataMatrix):1])
?image
dataMatrix <- matrix(rnorm(400), nrow = 40)
source('~/Desktop/coursera-dss/Exploratory Data Analysis Week 3/Dimensional Reduction (part 1).R')
