source('~/Desktop/coursera-dss/Statistical Inference Week 1/Probability Density Function.R')
library(UsingR); data(galton); library(ggplot2)
install.packages(UsingR)
install.packages("UsingR")
library(UsingR); data(galton); library(ggplot2)
library(reshape2)
longGalton <- melt(galton, measure.vars = c("child", "parent"))
g <- ggplot(longGalton, aes(x = value)) + geom_histogram(aes(y = ..density..,  fill = variable), binwidth=1, colour = "black") + geom_density(size = 2)
g <- g + facet_grid(. ~ variable)
g
g <- ggplot(galton, aes(x = child))
g <- g + geom_histogram(fill = "salmon",
binwidth=1, aes(y = ..density..), colour = "black")
g <- g + geom_density(size = 2)
g <- g + geom_vline(xintercept = mean(galton$child), size = 2)
g
ggplot(data.frame(x = factor(0 : 1), y = c(.5, .5)), aes(x = x, y = y)) + geom_bar(stat = "identity", colour = 'black', fill = "lightblue")
ggplot(data.frame(x = factor(1 : 6), y = rep(1/6, 6)), aes(x = x, y = y)) + geom_bar(stat = "identity", colour = 'black', fill = "lightblue")
g <- ggplot(data.frame(x = c(-0.25, 0, 0, 1, 1, 1.25),
y = c(0, 0, 1, 1, 0, 0)),
aes(x = x, y = y))
g <- g + geom_line(size = 2, colour = "black")
g <- g + labs(title = "Uniform density")
g
library(ggplot2)
nosim <- 10000; n <- 10
dat <- data.frame(
x = c(rnorm(nosim), apply(matrix(rnorm(nosim * n), nosim), 1, mean)),
what = factor(rep(c("Obs", "Mean"), c(nosim, nosim)))
)
ggplot(dat, aes(x = x, fill = what)) + geom_density(size = 2, alpha = .2);
dat <- data.frame(
x = c(sample(1 : 6, nosim, replace = TRUE),
apply(matrix(sample(1 : 6, nosim * 2, replace = TRUE),
nosim), 1, mean),
apply(matrix(sample(1 : 6, nosim * 3, replace = TRUE),
nosim), 1, mean),
apply(matrix(sample(1 : 6, nosim * 4, replace = TRUE),
nosim), 1, mean)
),
size = factor(rep(1 : 4, rep(nosim, 4))))
g <- ggplot(dat, aes(x = x, fill = size)) + geom_histogram(alpha = .20, binwidth=.25, colour = "black")
g + facet_grid(. ~ size)
dat <- data.frame(
x = c(sample(0 : 1, nosim, replace = TRUE),
apply(matrix(sample(0 : 1, nosim * 10, replace = TRUE),
nosim), 1, mean),
apply(matrix(sample(0 : 1, nosim * 20, replace = TRUE),
nosim), 1, mean),
apply(matrix(sample(0 : 1, nosim * 30, replace = TRUE),
nosim), 1, mean)
),
size = factor(rep(c(1, 10, 20, 30), rep(nosim, 4))))
g <- ggplot(dat, aes(x = x, fill = size)) + geom_histogram(alpha = .20, binwidth = 1 / 12, colour = "black");
g + facet_grid(. ~ size)
longGalton <- melt(galton, measure.vars = c("child", "parent"))
g <- ggplot(longGalton, aes(x = value)) + geom_histogram(aes(y = ..density..,  fill = variable), binwidth=1, colour = "black") + geom_density(size = 2)
g <- g + facet_grid(. ~ variable)
g
library(UsingR); data(galton); library(ggplot2)
library(reshape2)
longGalton <- melt(galton, measure.vars = c("child", "parent"))
g <- ggplot(longGalton, aes(x = value)) + geom_histogram(aes(y = ..density..,  fill = variable), binwidth=1, colour = "black") + geom_density(size = 2)
g <- g + facet_grid(. ~ variable)
g
---
## Using manipulate
```
```
library(manipulate)
install.packages("manipulate")
library(manipulate)
myHist <- function(mu){
g <- ggplot(galton, aes(x = child))
g <- g + geom_histogram(fill = "salmon",
binwidth=1, aes(y = ..density..), colour = "black")
g <- g + geom_density(size = 2)
g <- g + geom_vline(xintercept = mu, size = 2)
mse <- round(mean((galton$child - mu)^2), 3)
g <- g + labs(title = paste('mu = ', mu, ' MSE = ', mse))
g
}
manipulate(myHist(mu), mu = slider(62, 74, step = 0.5))
getwd()
source('~/Desktop/coursera-dss/Statistical Inference Week 1/Expected Value.R')
```{r lsm, dependson="galton",fig.height=7,fig.width=7, fig.align='center', echo = FALSE}
g <- ggplot(galton, aes(x = child))
g <- g + geom_histogram(fill = "salmon",
binwidth=1, aes(y = ..density..), colour = "black")
g <- g + geom_density(size = 2)
g <- g + geom_vline(xintercept = mean(galton$child), size = 2)
g
source('~/Desktop/coursera-dss/Statistical Inference Week 1/Expected Value.R')
source('~/Desktop/coursera-dss/Statistical Inference Week 1/Expected Value.R')
---
## Simulation experiment
Simulating normals with mean 0 and variance 1 versus averages
{r, fig.height=6, figh.width=6, fig.align='center', echo = FALSE}
library(ggplot2)
nosim <- 10000; n <- 10
dat <- data.frame(
x = c(rnorm(nosim), apply(matrix(rnorm(nosim * n), nosim), 1, mean)),
what = factor(rep(c("Obs", "Mean"), c(nosim, nosim)))
)
ggplot(dat, aes(x = x, fill = what)) + geom_density(size = 2, alpha = .2);
dat <- data.frame(
x = c(sample(1 : 6, nosim, replace = TRUE),
apply(matrix(sample(1 : 6, nosim * 2, replace = TRUE),
nosim), 1, mean),
apply(matrix(sample(1 : 6, nosim * 3, replace = TRUE),
nosim), 1, mean),
apply(matrix(sample(1 : 6, nosim * 4, replace = TRUE),
nosim), 1, mean)
),
size = factor(rep(1 : 4, rep(nosim, 4))))
g <- ggplot(dat, aes(x = x, fill = size)) + geom_histogram(alpha = .20, binwidth=.25, colour = "black")
g + facet_grid(. ~ size)
dat <- data.frame(
x = c(sample(0 : 1, nosim, replace = TRUE),
apply(matrix(sample(0 : 1, nosim * 10, replace = TRUE),
nosim), 1, mean),
apply(matrix(sample(0 : 1, nosim * 20, replace = TRUE),
nosim), 1, mean),
apply(matrix(sample(0 : 1, nosim * 30, replace = TRUE),
nosim), 1, mean)
),
size = factor(rep(c(1, 10, 20, 30), rep(nosim, 4))))
g <- ggplot(dat, aes(x = x, fill = size)) + geom_histogram(alpha = .20, binwidth = 1 / 12, colour = "black");
g + facet_grid(. ~ size)
source('~/Desktop/coursera-dss/Statistical Inference Week 1/Expected Value for PDFs.R')
library(ggplot2)
xvals <- seq(-10, 10, by = .01)
dat <- data.frame(
y = c(
dnorm(xvals, mean = 0, sd = 1),
dnorm(xvals, mean = 0, sd = 2),
dnorm(xvals, mean = 0, sd = 3),
dnorm(xvals, mean = 0, sd = 4)
),
x = rep(xvals, 4),
factor = factor(rep(1 : 4, rep(length(xvals), 4)))
)
ggplot(dat, aes(x = x, y = y, color = factor)) + geom_line(size = 2)
library(ggplot2)
nosim <- 10000;
dat <- data.frame(
x = c(apply(matrix(rnorm(nosim * 10), nosim), 1, var),
apply(matrix(rnorm(nosim * 20), nosim), 1, var),
apply(matrix(rnorm(nosim * 30), nosim), 1, var)),
n = factor(rep(c("10", "20", "30"), c(nosim, nosim, nosim)))
)
ggplot(dat, aes(x = x, fill = n)) + geom_density(size = 2, alpha = .2) + geom_vline(xintercept = 1, size = 2)
dat <- data.frame(
x = c(apply(matrix(sample(1 : 6, nosim * 10, replace = TRUE),
nosim), 1, var),
apply(matrix(sample(1 : 6, nosim * 20, replace = TRUE),
nosim), 1, var),
apply(matrix(sample(1 : 6, nosim * 30, replace = TRUE),
nosim), 1, var)
),
size = factor(rep(c(10, 20, 30), rep(nosim, 3))))
g <- ggplot(dat, aes(x = x, fill = size)) + geom_histogram(alpha = .20, binwidth=.3, colour = "black")
g <- g + geom_vline(xintercept = 2.92, size = 2)
g + facet_grid(. ~ size)
source('~/Desktop/coursera-dss/Statistical Inference Week 1/Variance simulation examples.R')
pbeta(c(0.4, 0.5, 0.6), 2, 1)
sd(apply(matrix(rnorm(nosim*n), nosim), 1, mean))
nosim <- 1000
n <- 10
sd(apply(matrix(rnorm(nosim*n), nosim), 1, mean))
1 / sqrt(n)
sd(apply(matrix(runif(nosim*n), nosim), 1, mean))
1 / sqrt(12*n)
sd(apply(matrix(rpois(nosim*n, 4), nosim), 1, mean))
2/sqrt(n)
sd(apply(matrix(sample(0:1, nosim*n, replace = TRUE), nosim), 1, mean))
1/(2* sqrt(n))
source('~/Desktop/coursera-dss/Statistical Inference Week 1/Standard error of the mean simulations.R')
library(UsingR); data(father.son);
x <- father.son$sheight
n<-length(x)
g <- ggplot(data = father.son, aes(x = sheight))
g <- g + geom_histogram(aes(y = ..density..), fill = "lightblue", binwidth=1, colour = "black")
g <- g + geom_density(size = 2, colour = "black")
g
round(c(var(x), var(x) / n, sd(x), sd(x) / sqrt(n)),2)
source('~/Desktop/coursera-dss/Statistical Inference Week 1/Variance Data Example.R')
choose(8, 7) * 0.5^8 + choose(8, 8)* 0.5^8
pbinom(6, size = 8, prob = 0.5, lower.tail = FALSE)
source('~/Desktop/coursera-dss/Statistical Inference Week 1/Binomial distributions.R')
pnorm(1160, mean = 1020, sd = 50, lower.tail = FALSE)
pnorm(2.8, lower.tail = FALSE)
qnorm(0.75, mean = 1020, sd = 50)
source('~/Desktop/coursera-dss/Statistical Inference Week 1/Normal distributions.R')
ppois(3, lambda = 2.5 * 4)
pbinom(2, size = 500, prob = 0.01)
ppois(2, lamda = 500 * 0.01)
ppois(2, lambda = 500 * 0.01)
pbinom(2, size = 500, prob = 0.01)
ppois(2, lambda = 500 * 0.01)
source('~/Desktop/coursera-dss/Statistical Inference Week 1/Poisson distributions.R')
source('~/Desktop/coursera-dss/Statistical Inference Week 1/Poisson distributions.R')
means <- cumsum(rnorm(n))/(1:n)
n <- 1000
means <- cumsum(rnorm(n))/(1:n)
means
n <- 10000; means <- cumsum(rnorm(n)) / (1  : n); library(ggplot2)
g <- ggplot(data.frame(x = 1 : n, y = means), aes(x = x, y = y))
g <- g + geom_hline(yintercept = 0) + geom_line(size = 2)
g <- g + labs(x = "Number of obs", y = "Cumulative mean")
g
means <- cumsum(sample(0 : 1, n , replace = TRUE)) / (1  : n)
g <- ggplot(data.frame(x = 1 : n, y = means), aes(x = x, y = y))
g <- g + geom_hline(yintercept = 0.5) + geom_line(size = 2)
g <- g + labs(x = "Number of obs", y = "Cumulative mean")
g
source('~/Desktop/coursera-dss/Statistical Inference Week 1/Asymptotics and LLN.R')
nosim <- 1000
cfunc <- function(x, n) sqrt(n) * (mean(x) - 3.5) / 1.71
dat <- data.frame(
x = c(apply(matrix(sample(1 : 6, nosim * 10, replace = TRUE),
nosim), 1, cfunc, 10),
apply(matrix(sample(1 : 6, nosim * 20, replace = TRUE),
nosim), 1, cfunc, 20),
apply(matrix(sample(1 : 6, nosim * 30, replace = TRUE),
nosim), 1, cfunc, 30)
),
size = factor(rep(c(10, 20, 30), rep(nosim, 3))))
g <- ggplot(dat, aes(x = x, fill = size)) + geom_histogram(alpha = .20, binwidth=.3, colour = "black", aes(y = ..density..))
g <- g + stat_function(fun = dnorm, size = 2)
g + facet_grid(. ~ size)
source('~/Desktop/coursera-dss/Statistical Inference Week 1/Asymptotics and the CLT.R')
source('~/Desktop/coursera-dss/Statistical Inference Week 1/Asymptotics and the CLT.R')
library(UsingR);data(father.son); x <- father.son$sheight
(mean(x) + c(-1, 1) * qnorm(.975) * sd(x) / sqrt(length(x))) / 12
binom.test(56, 100)$conf.int
0.56 + c(-1, 1) * qnorm(.975) * sqrt(0.56 * 0.44/ 100)
binom.test(56, 100)$conf.int
binom.test(56, 100)$conf.int
n <- 20; pvals <- seq(.1, .9, by = .05); nosim <- 1000
pvals
coverage <- sapply(pvals, function(p){
phats <- rbinom(nosim, prob = p, size = n) / n
ll <- phats - qnorm(.975) * sqrt(phats * (1 - phats) / n)
ul <- phats + qnorm(.975) * sqrt(phats * (1 - phats) / n)
mean(ll < p & ul > p)
})
coverage
pvals
source('~/Desktop/coursera-dss/Statistical Inference Week 1/Asymptotics and Confidence Intervals.R')
