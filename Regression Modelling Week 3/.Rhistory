source('~/Desktop/coursera-dss/Regression Modelling Week 3/Multivariate Regression Examples part 1.R')
q
my_fn <- function(data, mapping, method="loess", ...){
p <- ggplot(data = data, mapping = mapping) +
geom_point() +
geom_smooth(method=method, ...)
p
}
g = ggpairs(swiss, lower = list(continuous = my_fn))
g
summary(lm(Fertility ~ . , data = swiss))$coefficients
?swiss
pt(-2.448, df = 41) * 2
summary(lm(Fertility ~ Agriculture, data = swiss))$coefficients
summary(lm(Fertility ~ . , data = swiss))$coefficients
pt(-2.448, df = 41) * 2 ## p-value of Agriculture
summary(lm(Fertility ~ Agriculture, data = swiss))$coefficients
library(datasets); data(swiss); require(stats); require(graphics)
pairs(swiss, panel = panel.smooth, main = "Swiss data", col = 3 + (swiss$Catholic > 50))
library(datasets); data(swiss); require(stats); require(graphics)
pairs(swiss, panel = panel.smooth, main = "Swiss data", col = 3 + (swiss$Catholic > 50))
?col
?col = 3
rm(col)
rm(my_fn)
library(datasets); data(swiss); require(stats); require(graphics)
pairs(swiss, panel = panel.smooth, main = "Swiss data", col = 3 + (swiss$Catholic > 50))
summary(lm(Fertility ~ . , data = swiss))$coefficients
pt(-2.448, df = 41) * 2 ## p-value of Agriculture
summary(lm(Fertility ~ . , data = swiss))$coefficients
summary(lm(Fertility ~ Agriculture, data = swiss))$coefficients
pt(-2.448, df = 41) * 2 ## p-value of Agriculture
n <- 100; x2 <- 1 : n; x1 <- .01 * x2 + runif(n, -.1, .1); y = -x1 + x2 + rnorm(n, sd = .01)
summary(lm(y ~ x1))$coef
summary(lm(y ~ x1 + x2))$coef
n <- 100; x2 <- 1 : n; x1 <- .01 * x2 + runif(n, -.1, .1); y = -x1 + x2 + rnorm(n, sd = .01)
summary(lm(y ~ x1))$coef
summary(lm(y ~ x1))$coef
summary(lm(y ~ x1 + x2))$coef
summary(lm(y ~ .))$coef
summary(lm(y ~ x1 + x2))$coef
dat = data.frame(y = y, x1 = x1, x2 = x2, ey = resid(lm(y ~ x2)), ex1 = resid(lm(x1 ~ x2)))
library(ggplot2)
g = ggplot(dat, aes(y = y, x = x1, colour = x2))
g = g + geom_point(colour="grey50", size = 5) + geom_smooth(method = lm, se = FALSE, colour = "black")
g = g + geom_point(size = 4)
g
corr(x1, x2)
cor(x1, x2)
z <- swiss$Agriculture + swiss$Education
lm(Fertility ~ . + z, data = swiss)
source('~/Desktop/coursera-dss/Regression Modelling Week 3/Multivariate Regression Examples part 1.R')
source('~/Desktop/coursera-dss/Regression Modelling Week 3/Multivariate Regression Examples part 1.R')
source('~/Desktop/coursera-dss/Regression Modelling Week 3/Multivariable Regression - Dummy Variable.R')
require(datasets);data(InsectSprays); require(stats); require(ggplot2)
g = ggplot(data = InsectSprays, aes(y = count, x = spray, fill  = spray))
g = g + geom_violin(colour = "black", size = 2)
g = g + xlab("Type of spray") + ylab("Insect count")
g
head(InsectSprays)
source('~/Desktop/coursera-dss/Regression Modelling Week 3/Multivariable Regression - Dummy Variable.R')
summary(lm(count ~ spray, data = InsectSprays))$coef
summary(lm(count ~
I(1 * (spray == 'B')) + I(1 * (spray == 'C')) +
I(1 * (spray == 'D')) + I(1 * (spray == 'E')) +
I(1 * (spray == 'F'))
, data = InsectSprays))$coef
summary(lm(count ~
I(1 * (spray == 'B')) + I(1 * (spray == 'C')) +
I(1 * (spray == 'D')) + I(1 * (spray == 'E')) +
I(1 * (spray == 'F')) + I(1 * (spray == 'A')), data = InsectSprays))$coef
summary(lm(count ~
I(1 * (spray == 'B')) + I(1 * (spray == 'C')) +
I(1 * (spray == 'D')) + I(1 * (spray == 'E')) +
I(1 * (spray == 'F')) + I(1 * (spray == 'A')), data = InsectSprays))$coef
summary(lm(count ~
I(1 * (spray == 'B')) + I(1 * (spray == 'C')) +
I(1 * (spray == 'D')) + I(1 * (spray == 'E')) +
I(1 * (spray == 'F')) + I(1 * (spray == 'A')), data = InsectSprays))$coef
summary(lm(count ~ spray - 1, data = InsectSprays))$coef
library(dplyr)
summarise(group_by(InsectSprays, spray), mn = mean(count))
summary(lm(count ~ spray - 1, data = InsectSprays))$coef
summary(lm(count ~ spray - 1, data = InsectSprays))$coef
spray2 <- relevel(InsectSprays$spray, "C")
summary(lm(count ~ spray2, data = InsectSprays))$coef
source('~/Desktop/coursera-dss/Regression Modelling Week 3/Multivariable Regression - Dummy Variable.R')
library(datasets); data(swiss)
head(swiss)
hist(swiss$Catholic)
?swiss
library(dplyr)
swiss = mutate(swiss, CatholicBin = 1 * (Catholic > 50))
swiss
head(swiss)
g = ggplot(swiss, aes(x = Agriculture, y = Fertility, colour = factor(CatholicBin)))
g = g + geom_point(size = 6, colour = "black") + geom_point(size = 4)
g = g + xlab("% in Agriculture") + ylab("Fertility")
g
source('~/Desktop/coursera-dss/Regression Modelling Week 3/Multivariate Regression Examples part 3 - Creating Binary Variable.R')
summary(lm(Fertility ~ Agriculture, data = swiss))$coef
fit = lm(Fertility ~ Agriculture, data = swiss)
g1 = g
g1 = g1 + geom_abline(intercept = coef(fit)[1], slope = coef(fit)[2], size = 2)
g1
g1 = g
g = ggplot(swiss, aes(x = Agriculture, y = Fertility, colour = factor(CatholicBin)))
g = g + geom_point(size = 6, colour = "black") + geom_point(size = 4)
g = g + xlab("% in Agriculture") + ylab("Fertility")
g
library(dplyr)
swiss = mutate(swiss, CatholicBin = 1 * (Catholic > 50))
head(swiss)
g = ggplot(swiss, aes(x = Agriculture, y = Fertility, colour = factor(CatholicBin)))
g = g + geom_point(size = 6, colour = "black") + geom_point(size = 4)
g = g + xlab("% in Agriculture") + ylab("Fertility")
g
summary(lm(Fertility ~ Agriculture, data = swiss))$coef
fit = lm(Fertility ~ Agriculture, data = swiss)
g1 = g
g1 = g1 + geom_abline(intercept = coef(fit)[1], slope = coef(fit)[2], size = 2)
g1
fit
coef(fit)[1]
summary(lm(Fertility ~ Agriculture + factor(CatholicBin), data = swiss))$coef
fit = lm(Fertility ~ Agriculture + factor(CatholicBin), data = swiss)
g1 = g
g1 = g1 + geom_abline(intercept = coef(fit)[1], slope = coef(fit)[2], size = 2)
g1 = g1 + geom_abline(intercept = coef(fit)[1] + coef(fit)[3], slope = coef(fit)[2], size = 2)
g1
summary(lm(Fertility ~ Agriculture * factor(CatholicBin), data = swiss))$coef
fit = lm(Fertility ~ Agriculture * factor(CatholicBin), data = swiss)
g1 = g
g1 = g1 + geom_abline(intercept = coef(fit)[1], slope = coef(fit)[2], size = 2)
g1 = g1 + geom_abline(intercept = coef(fit)[1] + coef(fit)[3],
slope = coef(fit)[2] + coef(fit)[4], size = 2)
g1
summary(lm(Fertility ~ Agriculture + Agriculture : factor(CatholicBin), data = swiss))$coef
source('~/Desktop/coursera-dss/Regression Modelling Week 3/Multivariable Regression part 4 - Interaction Variable.R')
data(swiss)
fit <- lm(Fertility ~ . , data = swiss)
plot(predict(fit), resid(fit), pch = '.')
plot(predict(fit), resid(fit), pch = '.', size = "5")
plot(predict(fit), resid(fit), pch = '.', size = 5)
?plot
plot(predict(fit), resid(fit), pch = '.', cex = 2)
plot(predict(fit), resid(fit), pch = '.', cex = 5)
x = (1, 3, 5, 10)
x = c(1, 3, 5, 10)
rm(fit)
rm(swiss)
y = c(4, 3, 8, 1)
<- as.df(cbind(x, y))
ex1 <- as.df(cbind(x, y))
ex1 <- as.data.frame(cbind(x, y))
ex1
lm(y ~ x, data = ex1)
plot(fit)
fit <- lm(y ~ x, data = ex1)
plot(fit)
plot(x, y)
abline(x, y)
plot(x, y)
plot(x, y)
g = ggplot(ex1, aes(x = x, y = y))
library(ggplot2)
g = ggplot(ex1, aes(x = x, y = y))
g = g + geom_point(size = 6, colour = "black") + geom_point(size = 4)
g = g + geom_point(size = 6, colour = "black") + geom_point(size = 4); g
g = g + xlab("x") + ylab("y")
g
summary(lm(y ~ x, data = ex1))$coef
fit = lm(y ~ x, data = ex1)
g1 = g
g1 = g1 + geom_abline(intercept = coef(fit)[1], slope = coef(fit)[2], size = 2)
g1
par(mfrow = c(2, 2))
plot(fit)
